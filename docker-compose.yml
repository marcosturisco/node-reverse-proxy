services:

  proxy:
    build:
      context: nginx
    image: dockermactur/nginx:fullcycle
    container_name: proxy
    restart: on-failure
    networks:
      - node-network
    ports:
      - "8080:8080"
    depends_on:
      app:
        condition: service_healthy

  app:
    build:
      context: node
    image: dockermactur/node:fullcycle
    container_name: app
    restart: on-failure
    entrypoint: sh -c "\
      echo 'Installing Dependencies...' && \
      npm install -g npm@11.2.0 && \
      npm install express --save && \
      npm install mysql2 --save && \
      echo 'Starting Node Application...' && \
      npm run dev"
    networks:
      - node-network
    volumes:
      - ./node:/usr/src/app
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:9.2.0
    command: --innodb-use-native-aio=0 --bind-address=0.0.0.0
    container_name: db
    restart: on-failure
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
      - ./node/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=challenge
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - node-network

networks:
  node-network:
    driver: bridge